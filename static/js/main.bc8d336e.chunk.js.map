{"version":3,"sources":["components/Content/Content.js","components/SideMenu/SideMenu.js","containers/Page/Page.js","resources/data/characteristics.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["Content_Content","_ref","sub_category","color","numberOfCategories","react_default","a","createElement","className","style","maxHeight","content","map","key","title","text","SideMenu_SideMenu","category","sub_categories","selected","callback","Object","core_browser_esm","index","label","css","_templateObject","onClick","Page","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","categories","onChangeSubCategory","bind","assertThisInitialized","selectedCategories","characteristic","document","body","backgroundColor","setState","shallow_categories","slice","_this2","_this$props","show","console","log","category_index","lenght","Component","characteristics","App","selectedCharacteristic","length","Page_Page_Page","Boolean","window","location","hostname","match","ReactDOM","render","App_App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8TAIeA,SAAA,SAAAC,GAAiD,IAA9CC,EAA8CD,EAA9CC,aAAcC,EAAgCF,EAAhCE,MAAOC,EAAyBH,EAAzBG,mBACnC,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBC,MAAO,CAAEC,UAAWN,EAAqB,EAAyB,GAArBA,EAA0B,MAEhGF,EAAaS,QAAQC,IAAI,SAAAD,GACrB,OACIN,EAAAC,EAAAC,cAAA,OAAKM,IAAKF,EAAQG,MAAON,UAAU,WAC/BH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQC,MAAO,CAAEN,MAAOA,IAAUQ,EAAQG,OACxDT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAQG,EAAQI,0SCP1C,IAAAC,EAAA,SAAAf,GAAA,IAAGgB,EAAHhB,EAAGgB,SAAUd,EAAbF,EAAaE,MAAOe,EAApBjB,EAAoBiB,eAAgBC,EAApClB,EAAoCkB,SAAUC,EAA9CnB,EAA8CmB,SAA9C,OACXC,OAAAC,EAAA,EAAAD,CAAA,OAAKb,UAAU,aAEPU,EAAeN,IAAI,SAACV,EAAcqB,GAAf,OACfF,OAAAC,EAAA,EAAAD,CAAA,UACIb,UAAWW,IAAajB,EAAe,WAAa,GACpDW,IAAKX,EAAasB,MAClBC,IAAKA,YAAFC,IACqBvB,EAEPA,GAGjBwB,QAAS,kBAAMP,EAASH,EAAUM,KACjCrB,EAAasB,WCbbI,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAAJ,IACjBE,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAAO,GAAAO,KAAAH,KAAMH,KAEDO,MAAQ,CACXC,WAAY,IAGdP,EAAKQ,oBAAsBR,EAAKQ,oBAAoBC,KAAzBlB,OAAAmB,EAAA,EAAAnB,CAAAS,IAPVA,oFAWjB,IAAMW,EAAqBT,KAAKH,MAAMa,eAAeL,WAAWzB,IAC9D,SAAAK,GAEE,OADAA,EAASE,SAAWF,EAASC,eAAe,GACrCD,IAIX0B,SAASC,KAAKnC,MAAMoC,gBAAkBb,KAAKH,MAAMa,eAAevC,MAEhE6B,KAAKc,SAAS,CAAET,WAAYI,gDAGVxB,EAAUf,GAC5B,IAAI6C,EAAqBf,KAAKI,MAAMC,WAAWW,QAE/CD,EAAmB9B,GAAUE,SAAW4B,EAAmB9B,GAAUC,eAAehB,GAEpF8B,KAAKc,SAAS,CAAET,WAAYU,qCAGrB,IAAAE,EAAAjB,KAAAkB,EAC0BlB,KAAKH,MAA9Ba,EADDQ,EACCR,eAER,OAHOQ,EACiBC,MAMxBC,QAAQC,IAAIX,GAEVrC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASkC,EAAelB,OACrC4B,QAAQC,IAAIrB,KAAKI,MAAMC,YAEvBL,KAAKI,MAAMC,WAAWzB,IAAI,SAACK,EAAUqC,GAAX,OACzBjD,EAAAC,EAAAC,cAAA,OAAKM,IAAKI,EAASO,MAAOhB,UAAU,iBAClCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQC,MAAO,CAAEoC,gBAAiB5B,EAASd,QAAUc,EAASO,OAC5EnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACS,EAAD,CACEb,MAAOc,EAASd,MAChBgB,SAAUF,EAASE,SACnBF,SAAUqC,EACVpC,eAAgBD,EAASC,eACzBE,SAAU6B,EAAKX,sBACjBjC,EAAAC,EAAAC,cAACP,EAAD,CACEG,MAAOc,EAASd,MAChBD,aAAce,EAASE,SACvBf,mBAAoBa,EAASC,eAAeqC,eAtB/C,YApCqBC,aCkJnBC,EAxJS,CACpB,CAEIjC,MAAO,mBAEPrB,MAAO,aACPkC,WAAY,CACR,CAEIb,MAAO,cAEPrB,MAAO,gBAEPe,eAAgB,CACZ,CAEIM,MAAO,kBAGPb,QAAS,CACL,CACIG,MAAO,uBACPC,KAAM,oeAEV,CACID,MAAO,uBACPC,KAAM,g3BAEV,CACID,MAAO,uBACPC,KAAM,61BAIlB,CACIS,MAAO,kBACPb,QAAS,CACL,CACIG,MAAO,uBACPC,KAAM,cAEV,CACID,MAAO,uBACPC,KAAM,cAEV,CACID,MAAO,uBACPC,KAAM,gBAIlB,CACIS,MAAO,kBACPb,QAAS,CACL,CACIG,MAAO,uBACPC,KAAM,cAEV,CACID,MAAO,uBACPC,KAAM,cAEV,CACID,MAAO,uBACPC,KAAM,kBAM1B,CAEIS,MAAO,cAEPrB,MAAO,UAEPe,eAAgB,CACZ,CAEIM,MAAO,kBAGPb,QAAS,CACL,CACIG,MAAO,uBACPC,KAAM,oeAEV,CACID,MAAO,uBACPC,KAAM,g3BAEV,CACID,MAAO,uBACPC,KAAM,61BAIlB,CACIS,MAAO,kBACPb,QAAS,CACL,CACIG,MAAO,uBACPC,KAAM,cAEV,CACID,MAAO,uBACPC,KAAM,cAEV,CACID,MAAO,uBACPC,KAAM,gBAIlB,CACIS,MAAO,kBACPb,QAAS,CACL,CACIG,MAAO,uBACPC,KAAM,cAEV,CACID,MAAO,uBACPC,KAAM,cAEV,CACID,MAAO,uBACPC,KAAM,qBCxHjB2C,qBACnB,SAAAA,EAAY7B,GAAO,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAA0B,IACjB5B,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAAqC,GAAAvB,KAAAH,KAAMH,KAEDO,MAAQ,CACXuB,uBAAwB,MAJT7B,oFASc,IAA3B2B,EAAgBG,QAClB5B,KAAKc,SAAS,CAAEa,uBAAwBF,EAAgB,sCAInD,IAAAR,EAAAjB,KACP,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAlB,UACCiD,EAAgB7C,IAAI,SAAA8B,GAAc,OACjCrC,EAAAC,EAAAC,cAACsD,EAAD,CACEhD,IAAK6B,EAAelB,MACpBkB,eAAgBA,EAChBS,KAAMF,EAAKb,MAAMuB,yBAA2BjB,cAvBvBc,cCKbM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/D,EAAAC,EAAAC,cAAC8D,EAAD,MAAS1B,SAAS2B,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.bc8d336e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './Content.css';\r\n\r\nexport default ({ sub_category, color, numberOfCategories }) => {\r\n    return (\r\n        <div className=\"content_wrapper\" style={{ maxHeight: numberOfCategories > 4 ? numberOfCategories * 75 : 400 }}>\r\n            {\r\n                sub_category.content.map(content => {\r\n                    return (\r\n                        <div key={content.title} className=\"content\">\r\n                            <h2 className=\"title\" style={{ color: color }}>{content.title}</h2>\r\n                            <p className=\"text\">{content.text}</p>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n","/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core'\r\n\r\nimport './SideMenu.css';\r\n\r\nexport default ({ category, color, sub_categories, selected, callback }) => (\r\n    <div className=\"side_menu\">\r\n        {\r\n            sub_categories.map((sub_category, index) => (\r\n                <button\r\n                    className={selected === sub_category ? 'selected' : ''}\r\n                    key={sub_category.label}\r\n                    css={css`\r\n                        background-color: ${color};\r\n                            &.selected {\r\n                            color: ${color};\r\n                            }\r\n                        `}\r\n                    onClick={() => callback(category, index)}>\r\n                    {sub_category.label}\r\n                </button>\r\n            ))\r\n        }\r\n    </div>\r\n)","import React, { Component } from \"react\";\r\nimport Content from \"../../components/Content/Content\";\r\n\r\nimport './Page.css';\r\nimport SideMenu from \"../../components/SideMenu/SideMenu\";\r\n\r\nexport default class Page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      categories: []\r\n    };\r\n\r\n    this.onChangeSubCategory = this.onChangeSubCategory.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const selectedCategories = this.props.characteristic.categories.map(\r\n      category => {\r\n        category.selected = category.sub_categories[0];\r\n        return category;\r\n      }\r\n    );\r\n\r\n    document.body.style.backgroundColor = this.props.characteristic.color;\r\n\r\n    this.setState({ categories: selectedCategories });\r\n  }\r\n\r\n  onChangeSubCategory(category, sub_category) {\r\n    let shallow_categories = this.state.categories.slice();\r\n\r\n    shallow_categories[category].selected = shallow_categories[category].sub_categories[sub_category];\r\n\r\n    this.setState({ categories: shallow_categories });\r\n  }\r\n\r\n  render() {\r\n    const { characteristic, show } = this.props;\r\n\r\n    if (!show) {\r\n      return null;\r\n    }\r\n\r\n    console.log(characteristic);\r\n    return (\r\n      <main>\r\n        <h3 className=\"title\">{characteristic.label}</h3>\r\n        {console.log(this.state.categories)}\r\n\r\n        {this.state.categories.map((category, category_index) => (\r\n          <div key={category.label} className=\"table_wrapper\">\r\n            <h2 className=\"title\" style={{ backgroundColor: category.color }}>{category.label}</h2>\r\n            <div className=\"table\">\r\n              <SideMenu\r\n                color={category.color}\r\n                selected={category.selected}\r\n                category={category_index}\r\n                sub_categories={category.sub_categories}\r\n                callback={this.onChangeSubCategory} />\r\n              <Content\r\n                color={category.color}\r\n                sub_category={category.selected}\r\n                numberOfCategories={category.sub_categories.lenght} />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","const characteristics = [\r\n    {\r\n        //Characteristic name\r\n        label: 'Caracteristica 1',\r\n        //Background color\r\n        color: 'whitesmoke',\r\n        categories: [\r\n            {\r\n                //Title or identifier of the category\r\n                label: 'Categoria 1',\r\n                //Category header and label color\r\n                color: 'rebeccapurple',\r\n                //Sub categories are objects each containing a label and the content\r\n                sub_categories: [\r\n                    {\r\n                        //Label used in sub category button selection\r\n                        label: 'Sub Categoria 1',\r\n                        //Content of each sub category, set the content title(like the header of a table)\r\n                        //And it's value as text\r\n                        content: [\r\n                            {\r\n                                title: 'Titulo do conteudo 1',\r\n                                text: 'Conteudo 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam at tincidunt elit. Phasellus quis nisi urna. Donec mattis neque at tincidunt ultrices. Aenean consectetur urna at tincidunt mollis. Donec sagittis vestibulum dui non dapibus. Praesent sem orci, tempus vel dui volutpat, cursus convallis eros. Integer a aliquet neque, vel accumsan risus. Pellentesque nec nisi eu tortor rhoncus sagittis. Nulla lacinia in enim nec pharetra. Donec vulputate cursus facilisis.'\r\n                            },\r\n                            {\r\n                                title: 'Titulo do conteudo 2',\r\n                                text: 'Conteudo 2 Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?'\r\n                            },\r\n                            {\r\n                                title: 'Titulo do conteudo 3',\r\n                                text: 'Conteudo 3 At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.'\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Sub Categoria 2',\r\n                        content: [\r\n                            {\r\n                                title: 'Titulo do conteudo 1',\r\n                                text: 'Conteudo 1'\r\n                            },\r\n                            {\r\n                                title: 'Titulo do conteudo 2',\r\n                                text: 'Conteudo 2'\r\n                            },\r\n                            {\r\n                                title: 'Titulo do conteudo 3',\r\n                                text: 'Conteudo 3'\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Sub Categoria 3',\r\n                        content: [\r\n                            {\r\n                                title: 'Titulo do conteudo 1',\r\n                                text: 'Conteudo 1'\r\n                            },\r\n                            {\r\n                                title: 'Titulo do conteudo 2',\r\n                                text: 'Conteudo 2'\r\n                            },\r\n                            {\r\n                                title: 'Titulo do conteudo 3',\r\n                                text: 'Conteudo 3'\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                //Title or identifier of the category\r\n                label: 'Categoria 2',\r\n                //Category header and label color\r\n                color: 'crimson',\r\n                //Sub categories are objects each containing a label and the content\r\n                sub_categories: [\r\n                    {\r\n                        //Label used in sub category button selection\r\n                        label: 'Sub Categoria 1',\r\n                        //Content of each sub category, set the content title(like the header of a table)\r\n                        //And it's value as text\r\n                        content: [\r\n                            {\r\n                                title: 'Titulo do conteudo 1',\r\n                                text: 'Conteudo 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam at tincidunt elit. Phasellus quis nisi urna. Donec mattis neque at tincidunt ultrices. Aenean consectetur urna at tincidunt mollis. Donec sagittis vestibulum dui non dapibus. Praesent sem orci, tempus vel dui volutpat, cursus convallis eros. Integer a aliquet neque, vel accumsan risus. Pellentesque nec nisi eu tortor rhoncus sagittis. Nulla lacinia in enim nec pharetra. Donec vulputate cursus facilisis.'\r\n                            },\r\n                            {\r\n                                title: 'Titulo do conteudo 2',\r\n                                text: 'Conteudo 2 Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?'\r\n                            },\r\n                            {\r\n                                title: 'Titulo do conteudo 3',\r\n                                text: 'Conteudo 3 At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.'\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Sub Categoria 2',\r\n                        content: [\r\n                            {\r\n                                title: 'Titulo do conteudo 1',\r\n                                text: 'Conteudo 1'\r\n                            },\r\n                            {\r\n                                title: 'Titulo do conteudo 2',\r\n                                text: 'Conteudo 2'\r\n                            },\r\n                            {\r\n                                title: 'Titulo do conteudo 3',\r\n                                text: 'Conteudo 3'\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Sub Categoria 3',\r\n                        content: [\r\n                            {\r\n                                title: 'Titulo do conteudo 1',\r\n                                text: 'Conteudo 1'\r\n                            },\r\n                            {\r\n                                title: 'Titulo do conteudo 2',\r\n                                text: 'Conteudo 2'\r\n                            },\r\n                            {\r\n                                title: 'Titulo do conteudo 3',\r\n                                text: 'Conteudo 3'\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    /*\r\n    {\r\n        label: 'Caracteristica 2',\r\n        categories: [\r\n            {\r\n                label: 'Categoria 1'\r\n            },\r\n            {\r\n                label: 'Categoria 2'\r\n            },\r\n            {\r\n                label: 'Categoria 3'\r\n            }\r\n        ]\r\n    }*/\r\n];\r\n\r\nexport default characteristics;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Page from \"../Page/Page\";\r\nimport characteristics from \"../../resources/data/characteristics\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedCharacteristic: null\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (characteristics.length !== 0) {\r\n      this.setState({ selectedCharacteristic: characteristics[0] });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">Header</header>\r\n        {characteristics.map(characteristic => (\r\n          <Page\r\n            key={characteristic.label}\r\n            characteristic={characteristic}\r\n            show={this.state.selectedCharacteristic === characteristic}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}